name: .NET build

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_MULTILEVEL_LOOKUP: false
  NUGET_XMLDOC_MODE: ''
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  restore:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - uses: actions/cache@v4
      id: cache
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        lookup-only: true
        restore-keys: |
          ${{ runner.os }}-nuget-

    # Install the .NET workloads
    - uses: actions/setup-dotnet@v5
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        dotnet-version: 10.0.x

    - name: Restore using dotnet
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        dotnet restore

  run-tests:
    runs-on: ubuntu-latest
    needs: restore

    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true

    - uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    # Install .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 10.0.x

    # Test
    - name: Test with dotnet
      working-directory: ${{ github.workspace }}/tests/AspNetCore.OpenApi.Tests
      run: >
        dotnet run
        --results-directory ${{ github.workspace }}/coverage/results
        --coverage
        --coverage-output-format cobertura

    - name: Report Generator
      uses: danielpalme/ReportGenerator-GitHub-Action@v5
      with:
        reports: '${{ github.workspace }}/coverage/results/*.cobertura.xml'
        targetdir: '${{ github.workspace }}/coverage/reports'
        reporttypes: 'HtmlInline;Cobertura;MarkdownSummaryGithub'
        verbosity: 'Verbose'

    - name: Test Results
      run: cat '${{ github.workspace }}/coverage/reports/SummaryGithub.md' >> $GITHUB_STEP_SUMMARY

    - uses: actions/upload-artifact@v4
      with:
        name: CoverageReports
        path: ${{ github.workspace }}/coverage/reports
        if-no-files-found: ignore
